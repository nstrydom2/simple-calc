# You dont want to import the entire module, it will make# debugging a big hassle.# from math import *import mathimport renum1 = 0#operator = 0operator = ''num2 = 0num_cache = []operator_cache = []def old_input():    global num1    global operator    global num2    num1 = float(input("enter first number: "))    operator = input("enter operator: ")    num2 = float(input("enter second number: "))# Gets the user input and parses the values to be calculateddef new_input():    global num1    global operator    global num2    print("Calculator Demo\n\n")    raw_string = input("Enter arithmetic expression(End sqrt expression with a 0; Spaces required, Ex: 8 + 8 sqrt 0).\n")    cache_arithmetic(raw_string.split(' '))def cache_arithmetic(raw_input_list):    global num_cache    global operator_cache    for element in raw_input_list:        if element.isdigit():            num_cache.append(float(element))        else:            operator_cache.append(element)def run_calculator():    result = 0    temp = 0    new_input()    for idx, num in enumerate(num_cache):        if idx is 0:            temp = num        if idx is not len(num_cache) - 1:            # Calculate result            temp = calculator(operator_cache[idx], temp, num_cache[idx + 1])        else:            result = temp            break    print(result)#function which will be called if there is 2 inputsdef calculator(operator, num1, num2=None):    r = 0.0    if operator is "+":        r = (num1 + num2)    elif operator is "-":        r = (num1 - num2)    elif operator is "/":        r = (num1 / num2)    elif operator is "*":        r = (num1 * num2)    # The problem was on line below this comment, it was "if" and    # it need to be "elif"    elif operator == "sqrt":        # We are only using the math module for these two methods        # so we set the scope of the math module like so        r = float(math.sqrt(num1))    elif operator == "tan(x)":        r = float(math.tan(num1))    else:        print("invalid operator")    return r# old_input()# print(calculator(operator, num1, num2))# Wrote a method for you that parses an expression# Note: Currently doesn't support 'second_calculator()', I leave# that one up to you. if you need help I can assist you.run_calculator()